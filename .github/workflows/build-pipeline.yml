name: Build-Applications


on:
  # push:
  #   branches: [ master ]         
  # pull_request:
  #   branches: [ master ]
  workflow_run:
    workflows: [ "Test-Applications" ]
    types:
      - completed

env:
  imageName: ariana
  containerName: ariana
  appName: process_app

jobs:

  build-apps:
    name: Builds Apps
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ahmadnassri/action-workflow-run-wait@v1
    - name: Build Image ➡️ Create Container ➡️ Run Container ➡️ Save app as package 📦 🚀
      run: |
        docker build . -t ${{env.imageName}}
        docker container create --name ${{env.containerName}} ${{env.imageName}}
        docker start -i ${{env.containerName}}
        docker cp ${{env.containerName}}:/root/${{env.appName}}.zip .
    - uses: actions/upload-artifact@v2
      with:
        name: ${{env.appName}}.zip
        path: ${{env.appName}}.zip
        if-no-files-found: warn
  # build-ubuntu:
  #   name: Log-Writer -> Test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image
  #     run: docker build . -t ${{env.imageName}}
  #   - name: Create new container from image
  #     run: docker container create --name ${{env.containerName}} ${{env.imageName}}
  #   - name: Start the container from the built image
  #     run: docker start -i ${{env.containerName}}
  #   - name: Copy log file from container to the host machine
  #     run: sudo docker cp ${{env.containerName}}:${{env.logFilePath}}${{env.logFileName}} ${{env.logFilePath}}
  #   - name: Makes the files available
  #     run: sudo chmod -R +x ${{env.logFilePath}}
  #   - name: Check the file's content
  #     run: cat ${{env.logFilePath}}${{env.logFileName}}